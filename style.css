/* CSS reset */
*{
    margin: 0;
    padding: 0;
    font-size: 100%;
    box-sizing: border-box;
}

/* Variables */
:root{
    /* borders */
    --borderColor: rgba(25, 25, 20, 1);
    --stdBorder: 4px solid var(--borderColor);

    /* backgrounds */
    --bgColor1: rgba(255, 235, 205);
    --bgColor2: rgba(255, 248, 220);
}

/* Main items present in the HTML file */
html, body, .container{
    height: 100%;
    width: 100%;
}

.container{
    display: grid;
    grid-template-columns: 1fr 4fr;
    grid-template-rows: 1fr;
}

.totem{
    grid-column: 1;
    grid-row: 1;
    height: 100%;

    display: flex;
    flex-direction: column-reverse;
    align-items: center;

    border-right: var(--stdBorder);
    background-color: aquamarine;
}

.board{
    grid-column: 2;
    grid-row: 1;
    height: 100%;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 4fr 2fr;

    background-color: blueviolet;
}

.events{
    grid-column: 1;
    grid-row: 1;

    display: flex;
    justify-content: center;
    align-items: center;

    border-bottom: var(--stdBorder);
    background-color: rgba(0, 0, 0, 0.5);
}

.placement{
    height: 55%;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;

    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

.player{
    grid-column: 1;
    grid-row: 2;

    display: grid;
    grid-template-columns: 3fr 5fr 1fr;
    grid-template-rows: 1fr;

    background-color: chartreuse;
}

.weapons, .backpack, .health{
    display: flex;
    align-items: center;
}

.weapons{
    grid-column: 1;
    grid-row: 1;

    display: flex;
    align-items: center;
    justify-content: space-evenly;
    padding: 5px;

    border-right: var(--stdBorder);
}

.backpack{
    grid-column: 2;
    grid-row: 1;
}

.health{
    grid-column: 3;
    grid-row: 1;

    border-left: var(--stdBorder);
}

/* Dynamic items */

/* Cards */
.card{
    aspect-ratio: 63 / 88;
    height: 100%;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content 5fr 2fr;

    background-color: var(--bgColor1);
    border: var(--stdBorder);
    border-radius: 10px;
    text-shadow: 0 0 10px var(--bgColor1);
}

.cardName{
    grid-column: 1;
    grid-row: 1;

    text-align: center;
    padding: 2px;
    border-bottom: var(--stdBorder);
    font-size: 1.1em;
}

.cardImage{
    grid-column: 1;
    grid-row: 2;
    width: 100%;

    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;

    /* Fucking Christ. This block of code took blood sweat and tears, but I found a (sort-of) clean way of dealing with it.
       I'll add the images inside the JS code. img tags can burn in hell. */
}

.cardStats{
    grid-column: 1;
    grid-row: 3;

    display: grid;
    grid-template-columns: 2fr 3fr 2fr;
    grid-template-rows: 1fr;

    border-top: var(--stdBorder);
}

.cardHealth, .cardAbility, .cardDamage{
    display: flex;
    align-items: center;
    justify-content: center;

    font-size: 2em;
}

.cardDamage{
    grid-column: 1;
    grid-row: 1;

    border-right: var(--stdBorder);
}

.cardAbility{
    grid-column: 2;
    grid-row: 1;

    background-size: cover;
    background-position: center;
}

.cardHealth{
    grid-column: 3;
    grid-row: 1;

    border-left: var(--stdBorder);
}

/*Enemy*/
.cardEnemy{
    transition: box-shadow 0.2s ease;
}

/* Weapons */
.cardWeapon{
    transition: box-shadow 0.08s ease, transform 0.1s ease;
    will-change: transform;
}

.cardWeapon:hover{
    transform: translate(0px, -3px);
    box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.5);
}

.cardWeaponSelected{
    transition: box-shadow 0.07s ease-out;
    box-shadow: 0px 0px 5px rgb(255, 0, 0), 0px 3px 2px rgba(0, 0, 0, 0.5) !important;
    animation: wiggle 0.3s ease-in infinite;
}

@keyframes wiggle {
    0%   { transform: translate(0px, -3px) rotate(0deg);    }
    25%  { transform: translate(0px, -3px) rotate(0.3deg);  }
    50%  { transform: translate(0px, -3px) rotate(0deg);    }
    75%  { transform: translate(0px, -3px) rotate(-0.3deg); }
    100% { transform: translate(0px, -3px) rotate(0deg);    }
}

/* fr = France ðŸ‡«ðŸ‡· ðŸ’ª */